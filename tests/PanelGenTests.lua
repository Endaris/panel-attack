local PanelGenerator = require("gen_panels")
require("engine")
local GameModes = require("GameModes")

local function testPanelGenForGarbage1()
  PanelGenerator:setSeed(1)
  local panelbuffer = PanelGenerator.privateGeneratePanels(20, 6, 6, "", true)
  assert(panelbuffer == "123624354235541356256135534246123164452652261534436416143654326141464535125612654356413561525232252356624214265623324561")
end

testPanelGenForGarbage1()

local function testPanelGenForGarbage2()
  PanelGenerator:setSeed(2)
  local panelbuffer = PanelGenerator.privateGeneratePanels(20, 6, 5, "", false)
  assert(panelbuffer == "434133551424345232231321415545122411314534442342321125245242532315353252215143543315252554121343254532431155123232552441")
end

testPanelGenForGarbage2()

local function  testPanelGenForStartingBoard1()
  PanelGenerator:setSeed(3)
  local panelbuffer = PanelGenerator.privateGeneratePanels(7, 6, 6, "", true)
  assert(panelbuffer == "163625451214636135424264342531164654525236")
  panelbuffer = PanelGenerator.assignMetalLocations(panelbuffer, 6)
  assert(panelbuffer == "A63f2545a2A4Fc613542d26DCd25311646Ede2E236")
end

testPanelGenForStartingBoard1()

local function  testPanelGenForStartingBoard2()
  PanelGenerator:setSeed(4)
  local panelbuffer = PanelGenerator.privateGeneratePanels(7, 6, 5, "", false)
  assert(panelbuffer == "213125551342142153554322312431223144435532")
  panelbuffer = PanelGenerator.assignMetalLocations(panelbuffer, 6)
  assert(panelbuffer == "213Ab5E5134b1Db153E543b2312d3A22C1d44c5E32")
end

testPanelGenForStartingBoard2()

local function testPanelGenForRegularBoard1()
  PanelGenerator:setSeed(5)
  local panelbuffer = PanelGenerator.privateGeneratePanels(100, 6, 6, "", true)
  assert(panelbuffer == "654324321251632562264313656452423131215252532543421625565262343613412156636415463561636414452141345235621513536242254626163532654146526562342141651526365143143526321645264161652632145154623536312145631323352515525642142351323642141535434326262414534541646254521416213262654126315235162463235141146525535313651524536315125124316356121561532153623461212513435421514146161614234261425452352141125434641313123265514643263465312351243136354363415646652431534612463565516231134316612432154651323236152315461452134346212615423146345412252346564651215246353532415243351621123253432612561464324141432453645121")
  panelbuffer = PanelGenerator.assignMetalLocations(panelbuffer, 6)
  assert(panelbuffer == "654cB4c2A2516c2E62b643A3656D5b42c1C1B15b525C25d3d2162E565bF23dC613d121E66c6D15d6C561636dA44eB141c4523E6b15A3e3624B2e4F2616C5c2f5414F5B65f234bA41F515b63f5A43a4352F32a6D5b6416A652fC2aD5154623eC63a214Ef3A3233E251e52E6d2A42c513B364b14a5C54C4c2626b4A4534e4A6Df254E214a62a3B626541bFcA523516b4F3b3514A14f5B55C5c13f5A5245c6C1512E12d316Ce6a2156A532aE3f2346A21Be13d354B15a4A461616aDb34B614254eBcE2141125d3DfD131312C2f5e14F432634fE3Ab351243A3f3E43f3D15f4665B43a5C4f1246c5F5e1623A1c4C166124cB15Df513232cFa52C154fA452134cD6bA2615423a4F34E4a2b5234F5fD651b15B4635C53bd15B433Ea621123B5c4Cb612e61D643B41d143B45c6d51B1")
end

testPanelGenForRegularBoard1()

local function testPanelGenForRegularBoard2()
  PanelGenerator:setSeed(6)
  local panelbuffer = PanelGenerator.privateGeneratePanels(100, 6, 5, "", false)
  assert(panelbuffer == "145351332145523213115122252545445452221343433432312521455343144124413531554454345223423131115425344234431141125415332244224535141253322145154411321145155231511522352445411522342315511221425515531442344515513321144153425512334433245252112144224552442323153155425324153231325123143312552554135142442251233512525145451523233415124323215215531154155325421531153124422331143415424534533215151422242141354335211523545414422551314414535522353254215521552342135433213225345354254513421324244113112535355443144324331453453345544232433521551435342213554131435225313443132154553232341124232253443315152231533543")
  panelbuffer = PanelGenerator.assignMetalLocations(panelbuffer, 6)
  assert(panelbuffer == "14e35Ac32A4552c2A3a1512B2eB545445d5Bb2A343433dC2c1252A4e5C43a441B44A3e3155D4e4cD5223423Ac11a542EC4d2344c1A41A2541e332Bd42B453e14aB533B214ea54D113Ba145a552C151a52B3e2D45D1a5223D231eE112b1425E1e5Ca442c445A551cC211441Ecd25E123c443C24E2e2112A4dbB4552442c2C1E31e542E32d153bC1C2e123143C1bEe255413E14bd42B512C351b52e1D5451E2c2Cc4151243BcBa52155311Ed1Ee3254215cAA5c1244b2C31a4341E42D5c4533B1e1eA4222421DaC5d3352a15B3545d1D4bB5513144aDE35e2235C25d2a5E21e523D2135d3CB1c225345cE42eD513421C2d2Dd113A1253e3E5d43a4432D3C1d5345C3d55D4b3243c5B15e143E34B2a3Ee4131435Bb53Ac443A3215d5E3b32c4A1242c225C44Cc15aE223153c54C")
end

testPanelGenForRegularBoard2()

local function testStackStartingBoard1()
  local battleRoom = BattleRoom.createLocalFromGameMode(GameModes.ONE_PLAYER_ENDLESS)
  local player = battleRoom.players[1]
  player.settings.speed = 1
  player.settings.difficulty = 1
  player.settings.style = GameModes.Styles.CLASSIC

  local stack = player:createStackFromSettings(battleRoom:createMatch())
  stack.match:setSeed(7)
  local panelbuffer = stack:makeStartingBoardPanels()
  assert(panelbuffer == "0400000bC00201240a0D3305e32E114D535d21aD12")
  panelbuffer = stack:makePanels()
  assert(panelbuffer == "0bC00201240a0D3305e32E114D535d21aD121445cD2Cc221c241A4435e3C2Ea154435Db15a411E12bE21d4145C5c3E111441CcD5c2422B4a2135e41Eb443B1422d3D5Ed515A312e3243d3B1B51e443Dc312e511De13D2214B15e5e35C334E44bd53C213221Cb1E1c23D1c2355C1c12c225C55a432Bb2C2133d132Bd33E332dB352423Db513a33Ae531E22c5D14d225E313A42a425eD5C5d2521254bEE11c512422aC1cA131C525d253E33dAe445123A51bdD22532315Ad35Cc51D3542d1a3C1552B5c22C322eA5b353524D2d4C52a3C44c5253a41DdD553253a32A1A35d3C25c2415a5A15B2a2325D2a5a1232C22e5A1E12a2444a25C255cA15c342B12Bc14c542B31A5a1554C35dc121B35dE214A14c5142C12dE31b534aB512a41A5451b32C251eC2e4B3234C5d515432DeaB415351C3b4aC153532Dd14dD314535B21c")
end

testStackStartingBoard1()


local function testStackStartingBoard2()
  local battleRoom = BattleRoom.createLocalFromGameMode(GameModes.ONE_PLAYER_VS_SELF)
  local player = battleRoom.players[1]
  player.settings.level = 10
  player.settings.style = GameModes.Styles.MODERN

  local stack = player:createStackFromSettings(battleRoom:createMatch())
  stack.match:setSeed(8)
  local panelbuffer = stack:makeStartingBoardPanels()
  assert(panelbuffer == "0000004043E0C06130604Fd320145f614Cf446c52A")
  panelbuffer = stack:makePanels()
  assert(panelbuffer == "d043E0C06130604Fd320145f614Cf446c52A312Ac2Df4356316aC1fB464324a45F6A43f4d63E2115F1d52F465fc25B624Ca653126e1EBd3236616Cd512D53b5d64A412d13Ac15D645Df135315fD2b3212A35D2e4D61e2652F3d1c4243F51cA652c263B45cD631b61B1b4236D5a6D36f246D11c215F616cF13Ec432d365B42fC1363546Ea6D5c124262dC2E1d2642C1e43F263bE164f33b123BA64f133B136dB34e123213Fd1dE123e63B4264a4B1bA23461641bE35Bd124613Faf34B4514B5a23a323Eb363B146a61F234aB56d535C213bF4Ab412365A51bb353F5141d5D2E46a3E32a566aF515d65C436a365AD6e3461342eD3E3e36E1242a63Ea631B63d523B16d626Bc641E15bF364b42e461C13f5B43a423A526cD6f4A212534Fb43B641e213aF4C4f2155B14f245Fb41e4532C1e6B34d3151F1d52F2D6a4262d3F45")
end

testStackStartingBoard2()